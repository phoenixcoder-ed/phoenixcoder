name: 🔄 持续集成流程

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

env:
  NODE_VERSION: '24'
  PYTHON_VERSION: '3.13'
  PNPM_VERSION: '9'
  # 数据库版本配置
  POSTGRES_VERSION: '16'
  REDIS_VERSION: '7'
  # 数据库连接配置
  DATABASE_URL: postgresql://postgres:postgres@localhost:5432/phoenixcoder_test
  REDIS_URL: redis://localhost:6379/1

jobs:
  test:
    name: 🧪 测试
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:${{ env.POSTGRES_VERSION }}
        env:
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: phoenixcoder_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:${{ env.REDIS_VERSION }}
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
    
    steps:
      - name: 📥 检出代码
        uses: actions/checkout@v4
      
      - name: 🏗️ 设置 Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'
      
      - name: 🐍 设置 Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      
      - name: 📦 安装 pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      
      - name: 📦 安装依赖
        run: pnpm install --frozen-lockfile
      
      - name: 🧪 运行测试
        run: pnpm test
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
          REDIS_URL: ${{ env.REDIS_URL }}
      
      - name: 🏗️ 构建项目
        run: pnpm build