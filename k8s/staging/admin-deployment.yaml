apiVersion: apps/v1
kind: Deployment
metadata:
  name: phoenixcoder-admin
  namespace: staging
  labels:
    app: phoenixcoder-admin
    environment: staging
    component: frontend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: phoenixcoder-admin
  template:
    metadata:
      labels:
        app: phoenixcoder-admin
        environment: staging
        component: frontend
    spec:
      containers:
      - name: admin
        image: ghcr.io/phoenixcoder/admin:latest
        ports:
        - containerPort: 80
          name: http
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: VITE_API_BASE_URL
          value: "https://staging-api.phoenixcoder.dev"
        - name: VITE_OIDC_ISSUER
          value: "https://staging-oidc.phoenixcoder.dev"
        - name: VITE_OIDC_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: phoenixcoder-config
              key: oidc-client-id
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
      volumes:
      - name: nginx-config
        configMap:
          name: nginx-config
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: phoenixcoder-admin
  namespace: staging
  labels:
    app: phoenixcoder-admin
    environment: staging
spec:
  selector:
    app: phoenixcoder-admin
  ports:
  - name: http
    port: 80
    targetPort: 80
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phoenixcoder-admin-ingress
  namespace: staging
  labels:
    app: phoenixcoder-admin
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "200"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - staging.phoenixcoder.dev
    secretName: staging-admin-tls
  rules:
  - host: staging.phoenixcoder.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: phoenixcoder-admin
            port:
              number: 80