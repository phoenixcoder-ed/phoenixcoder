apiVersion: apps/v1
kind: Deployment
metadata:
  name: phoenixcoder-server
  namespace: staging
  labels:
    app: phoenixcoder-server
    environment: staging
    component: backend
spec:
  replicas: 2
  selector:
    matchLabels:
      app: phoenixcoder-server
  template:
    metadata:
      labels:
        app: phoenixcoder-server
        environment: staging
        component: backend
    spec:
      containers:
      - name: server
        image: ghcr.io/phoenixcoder/server:latest
        ports:
        - containerPort: 8000
          name: http
        env:
        - name: ENVIRONMENT
          value: "staging"
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: phoenixcoder-secrets
              key: database-url
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: phoenixcoder-secrets
              key: redis-url
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: phoenixcoder-secrets
              key: jwt-secret
        - name: OIDC_CLIENT_ID
          valueFrom:
            configMapKeyRef:
              name: phoenixcoder-config
              key: oidc-client-id
        - name: OIDC_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: phoenixcoder-secrets
              key: oidc-client-secret
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: phoenixcoder-server
  namespace: staging
  labels:
    app: phoenixcoder-server
    environment: staging
spec:
  selector:
    app: phoenixcoder-server
  ports:
  - name: http
    port: 80
    targetPort: 8000
    protocol: TCP
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: phoenixcoder-server-ingress
  namespace: staging
  labels:
    app: phoenixcoder-server
    environment: staging
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
spec:
  tls:
  - hosts:
    - staging-api.phoenixcoder.dev
    secretName: staging-api-tls
  rules:
  - host: staging-api.phoenixcoder.dev
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: phoenixcoder-server
            port:
              number: 80