apiVersion: v1
kind: ConfigMap
metadata:
  name: phoenixcoder-config
  namespace: production
  labels:
    app: phoenixcoder
    environment: production
data:
  # OIDC Configuration
  oidc-issuer: "https://oidc.phoenixcoder.dev"
  oidc-client-id: "phoenixcoder-admin"
  oidc-redirect-uri: "https://phoenixcoder.dev/auth/callback"
  oidc-scope: "openid profile email"
  
  # API Configuration
  api-base-url: "https://api.phoenixcoder.dev"
  api-version: "v1"
  api-timeout: "30000"
  api-retry-attempts: "3"
  
  # Application Configuration
  app-name: "PhoenixCoder"
  app-version: "1.0.0"
  app-environment: "production"
  app-log-level: "info"
  app-debug: "false"
  
  # Database Configuration
  database-host: "postgres.production.svc.cluster.local"
  database-port: "5432"
  database-name: "phoenixcoder_prod"
  database-ssl-mode: "require"
  database-pool-size: "20"
  database-max-connections: "100"
  
  # Redis Configuration
  redis-host: "redis.production.svc.cluster.local"
  redis-port: "6379"
  redis-db: "0"
  redis-pool-size: "10"
  redis-timeout: "5000"
  
  # File Upload Configuration
  upload-max-size: "10485760"  # 10MB
  upload-allowed-types: "image/jpeg,image/png,image/gif,application/pdf,text/plain"
  upload-storage-type: "s3"
  upload-s3-bucket: "phoenixcoder-prod-uploads"
  upload-s3-region: "us-west-2"
  
  # Email Configuration
  email-provider: "smtp"
  email-smtp-host: "smtp.gmail.com"
  email-smtp-port: "587"
  email-from-address: "noreply@phoenixcoder.dev"
  email-from-name: "PhoenixCoder"
  
  # WeChat Mini Program Configuration
  wechat-app-id: "wx1234567890abcdef"
  wechat-api-url: "https://api.weixin.qq.com"
  
  # Security Configuration
  cors-allowed-origins: "https://phoenixcoder.dev,https://www.phoenixcoder.dev"
  cors-allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  cors-allowed-headers: "Content-Type,Authorization,X-Requested-With"
  csrf-protection: "true"
  
  # Rate Limiting Configuration
  rate-limit-window: "900000"  # 15 minutes
  rate-limit-max-requests: "1000"
  rate-limit-skip-successful: "true"
  
  # Monitoring Configuration
  metrics-enabled: "true"
  metrics-port: "9090"
  health-check-interval: "30000"
  
  # Cache Configuration
  cache-ttl: "3600"  # 1 hour
  cache-max-size: "1000"
  cache-strategy: "lru"
  
  # Session Configuration
  session-timeout: "86400000"  # 24 hours
  session-secure: "true"
  session-same-site: "strict"
  
  # Feature Flags
  feature-user-registration: "true"
  feature-task-publishing: "true"
  feature-skill-assessment: "true"
  feature-achievement-system: "true"
  feature-real-time-chat: "true"
  feature-payment-integration: "true"
  
  # Third-party Integrations
  github-oauth-enabled: "true"
  google-oauth-enabled: "true"
  linkedin-oauth-enabled: "true"
  
  # Performance Configuration
  connection-pool-timeout: "30000"
  query-timeout: "10000"
  transaction-timeout: "30000"
  
  # Backup Configuration
  backup-enabled: "true"
  backup-schedule: "0 2 * * *"  # Daily at 2 AM
  backup-retention-days: "30"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: production
  labels:
    app: phoenixcoder
    environment: production
    component: nginx
data:
  default.conf: |
    upstream backend {
        server phoenixcoder-server:80;
        keepalive 32;
    }
    
    upstream oidc {
        server phoenixcoder-oidc:80;
        keepalive 16;
    }
    
    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    
    server {
        listen 80;
        server_name _;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.phoenixcoder.dev https://oidc.phoenixcoder.dev" always;
        
        # Connection limits
        limit_conn conn_limit_per_ip 20;
        
        # Gzip compression
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/json
            application/javascript
            application/xml+rss
            application/atom+xml
            image/svg+xml;
        
        # Static files caching
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            limit_req zone=static burst=100 nodelay;
        }
        
        # API proxy
        location /api/ {
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }
        
        # Auth proxy
        location /auth/ {
            limit_req zone=auth burst=10 nodelay;
            proxy_pass http://oidc;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Main application
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Error pages
        error_page 404 /404.html;
        error_page 500 502 503 504 /50x.html;
        
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }